const db = require("../config/db");
const bcrypt = require("bcryptjs");
const jwt = require("jsonwebtoken");
require("dotenv").config();

// Register User
exports.registerUser = (req, res) => {
    const { full_name, email, phone, password } = req.body;
    const hash = bcrypt.hashSync(password, 10);

    db.query("INSERT INTO Users (full_name, email, phone, password_hash) VALUES (?, ?, ?, ?)", 
    [full_name, email, phone, hash], 
    (err, result) => {
        if (err) return res.status(500).json({ error: err.message });
        res.json({ message: "User registered successfully!" });
    });
};

// Login User
exports.loginUser = (req, res) => {
    const { email, password } = req.body;

    db.query("SELECT * FROM Users WHERE email = ?", [email], (err, results) => {
        if (err || results.length === 0) return res.status(401).json({ error: "User not found!" });

        const user = results[0];
        if (!bcrypt.compareSync(password, user.password_hash)) {
            return res.status(401).json({ error: "Invalid credentials!" });
        }

        const token = jwt.sign({ userId: user.user_id }, process.env.JWT_SECRET, { expiresIn: "1h" });
        res.json({ message: "Login successful!", token, user });
    });
};

// Get Destinations
exports.getDestinations = (req, res) => {
    db.query("SELECT * FROM Destinations", (err, results) => {
        if (err) return res.status(500).json({ error: err.message });
        res.json(results);
    });
};

// Get Packages
exports.getPackages = (req, res) => {
    db.query("SELECT * FROM Packages", (err, results) => {
        if (err) return res.status(500).json({ error: err.message });
        res.json(results);
    });
};

// Book a Trip
exports.bookTrip = (req, res) => {
    const { user_id, destination_id, travel_date } = req.body;

    db.query("INSERT INTO Bookings (user_id, destination_id, travel_date) VALUES (?, ?, ?)",
    [user_id, destination_id, travel_date], 
    (err, result) => {
        if (err) return res.status(500).json({ error: err.message });
        res.json({ message: "Booking successful!" });
    });
};

// Get User Bookings
exports.getBookings = (req, res) => {
    const { userId } = req.params;

    db.query("SELECT * FROM Bookings WHERE user_id = ?", [userId], (err, results) => {
        if (err) return res.status(500).json({ error: err.message });
        res.json(results);
    });
};

// Submit Review
exports.submitReview = (req, res) => {
    const { user_id, destination_id, rating, review_text } = req.body;

    db.query("INSERT INTO Reviews (user_id, destination_id, rating, review_text) VALUES (?, ?, ?, ?)",
    [user_id, destination_id, rating, review_text], 
    (err, result) => {
        if (err) return res.status(500).json({ error: err.message });
        res.json({ message: "Review submitted!" });
    });
};

// Contact Us Form Submission
exports.contactUs = (req, res) => {
    const { full_name, email, subject, message } = req.body;

    db.query("INSERT INTO ContactMessages (full_name, email, subject, message) VALUES (?, ?, ?, ?)",
    [full_name, email, subject, message], 
    (err, result) => {
        if (err) return res.status(500).json({ error: err.message });
        res.json({ message: "Message sent successfully!" });
    });
};
